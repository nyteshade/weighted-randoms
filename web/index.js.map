{"version":3,"sources":["asArray.js","random.js","item.js","examples/DnDBasicRulesMagic.js","index.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","Object","defineProperty","exports","value","SortOptions","asArray","numericSort","isNumber","provideGetter","reverseNumericSort","Number","isNaN","parseFloat","isFinite","a","b","Error","left","right","apply","arguments","ASCENDING","DESCENDING","object","direction","length","undefined","finiteKeys","keys","filter","key","map","num","sort","proxy","Proxy","get","t","p","r","Reflect","Array","from","to","as","force","contents","target","eval","_default","_item2","require","_asArray","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","_i","_s","_e","_arr","_n","_d","call","next","done","push","err","isArray","_construct","Parent","args","Class","_isNativeReflectConstruct","construct","bind","instance","Function","_setPrototypeOf","sham","Boolean","valueOf","e","o","setPrototypeOf","__proto__","_createForOfIteratorHelper","allowArrayLike","it","F","s","n","_e2","f","normalCompletion","didErr","step","_e3","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","toString","slice","name","test","iter","len","arr2","_classCallCheck","Constructor","_defineProperties","props","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","Random","_Symbol$toStringTag","weightIfFirstAndFinite","_this$constructor","_len","list","_key","standardWeight","DEF_STD_WEIGHT","concat","normalizeArgs","STD_WEIGHT","set","reweighStandardItems","_step","size","_iterator","weight","newStandardWeight","_step2","_iterator2","item","tags","includes","_len2","items","_key2","withWeight","asc","GEN_RANGE","one","_step3","index","Math","random","count","isFunction","_iterator3","result","postProcess","_len3","_key3","Item","_len4","_key4","sides","repeat","dropLowest","individualValues","dice","range","results","some","splice","reduce","prev","cur","defaultWeight","rand","_len5","_key5","add","weighing","addRange","_len6","_key6","_len7","_key7","_len8","objects","_key8","_len9","_key9","_len10","_key10","_len11","_key11","hasOwnProperty","_step4","_iterator4","_item","property","receiver","usingItem","itemClass","toStringTag","GEN_RANGE_VALS","symbol","exec","module","_random","_defineProperty","assign","indexOf","WeaponsArmorTable","WandsStavesRodsTable","SwordsTable","ScrollsTable","RingsTable","PotionsTable","MiscellaneousMagicTable","MagicItemsTable","_exportNames","forEach","_DnDBasicRulesMagic"],"mappings":"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","file":"index.js","sourceRoot":"../dist","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SortOptions = void 0;\nexports.asArray = asArray;\nexports.numericSort = exports.isNumber = exports[\"default\"] = void 0;\nexports.provideGetter = provideGetter;\nexports.reverseNumericSort = void 0;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n/**\n * If the value supplied is actually a number, basically finite values that\n * can be parsed as floats and are not `NaN` will cause this function to\n * return true\n *\n * @param {mixed} value any value that should be tested for numberhood\n *\n * @return {Boolean} true if the value is not `NaN` and can be parsed as\n * a float\n */\nvar isNumber = function isNumber(value) {\n  return !Number.isNaN(parseFloat(value)) && isFinite(value);\n};\n/**\n * The `sort` method on `Array` instances sorts alphabetically rather than\n * numerically. Can be a problem when we specifically wish to sort by\n * numbers. This method does so with a deliberate soft equals for when\n * checking if `a` and `b` are equal. The soft equal is to allow for cases\n * where `5 == new Number(5)`.\n *\n * This function sorts the numeric keys in ascending order.\n *\n * @param {Number} a the left component to compare\n * @param {Number} b the right component to compare\n *\n * @return {Number} -1 on if `a` is less than `b`, 0 if they are equal and\n * 1 if `a` > `b`.\n *\n * @throws an error if both a and b are not finite values.\n */\n\n\nexports.isNumber = isNumber;\n\nvar numericSort = function numericSort(a, b) {\n  if (!isNumber(a) || !isNumber(b)) {\n    throw new Error(\"numericSort should only be used on numbers\");\n  }\n\n  var left = Number(a);\n  var right = Number(b);\n\n  if (left < right) {\n    return -1;\n  }\n\n  if (left == right) {\n    return 0;\n  } // double equals are deliberate\n\n\n  if (left > right) {\n    return 1;\n  }\n};\n/**\n * This function wraps numericSort in a function that swaps the\n * direction of the default numeric sorting routine, i.e. sorts\n * the supplied numbers in descending order.\n *\n * @param {Array<number|Number>} args a left value and right value\n * typically, subsequent parameters are ignored by `Array.sort()`\n * @return {number} -1, 0, or 1 as is expected for a sort routine\n */\n\n\nexports.numericSort = numericSort;\n\nvar reverseNumericSort = function reverseNumericSort() {\n  return -1 * numericSort.apply(void 0, arguments);\n};\n/**\n * A constant used to define the various options that can be passed\n * to `asArray()` in order to determine how to sort the numeric keys\n * of the supplied array.\n */\n\n\nexports.reverseNumericSort = reverseNumericSort;\nvar SortOptions = {\n  ASCENDING: 1,\n  DESCENDING: -1\n};\n/**\n * This function takes an object that has numeric keys and from that\n * object, in order, creates a normally index'ed array. So given an\n * object such as:\n * ```\n * let object = { '-23': 'c', 5: 'a', 123: 't' }\n * ```\n *\n * You can invoke `asArray()` and get the following\n *\n * ```\n * asArray(object) // [ 'c', 'a', 't' ]\n * ```\n *\n * Calling asArray() does not mutate the object supplied. Rather a\n * Proxy instance is created to wrap it and allow for the conversion to\n * a bonafide array.\n *\n * @param {Object} object any JavaScript object that can be iterated over\n * that contains at least a property that is a finite value (i.e. number)\n * @param {number} direction if `SortOptions.ASCENDING` or 1 is supplied,\n * which is the default, keys with a lower numeric value will be earlier\n * in the generated array. If `SortOptions.DESCENDING` or -1 is supplied,\n * the opposite will occur.\n * @return an actual array instance with all previous finite values\n * appearing in numerical order in the returned array.\n */\n\nexports.SortOptions = SortOptions;\n\nfunction asArray(object) {\n  var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SortOptions.ASCENDING;\n  var finiteKeys = Object.keys(object).filter(function (key) {\n    return isFinite(key);\n  }).map(function (num) {\n    return Number(num);\n  });\n  finiteKeys.sort(SortOptions.ASCENDING == direction ? numericSort : reverseNumericSort);\n  var proxy = new Proxy(object, {\n    get: function get(t, p, r) {\n      if (_typeof(p) === 'symbol') {\n        return Reflect.get(t, p, r);\n      }\n\n      if (p === 'length') {\n        return finiteKeys.length;\n      }\n\n      if (isFinite(p) && p >= 0 && p < finiteKeys.length) {\n        var key = finiteKeys[p];\n        var result = t[p] || t[key];\n        return result;\n      } else {\n        return Reflect.get(t, p, r);\n      }\n    }\n  });\n  return Array.from(proxy);\n}\n/**\n * Adds a `asArray` getter to the object in question. If the object\n * supplied is a function or class, its instances will bear the new\n * getter property. If the supplied object does not have a `prototype`\n * property, then the getter is applied directly to the object supplied\n *\n * @method provideGetter\n *\n * @param {Function|Object} to see above; the value to receive a new\n * `asArray` getter\n * @param {string} [as='asArray'] defaulting to the value `asArray`, the\n * name of the injected getter can be supplied by the caller.\n * @param {boolean} force if true, no autodetection of function or class\n * takes place and the resulting getter is blindly applied to the target\n */\n\n\nfunction provideGetter(to) {\n  var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'asArray';\n  var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var contents = arguments.length > 3 ? arguments[3] : undefined;\n  var target = to; // Set proper defaults\n\n  contents = contents || '(arguments[0])';\n\n  if (!force && to !== null && to !== void 0 && to.prototype) {\n    target = to.prototype;\n    contents = '(this)';\n  }\n\n  Object.defineProperty(target, as, {\n    get: function get() {\n      return asArray(eval(contents));\n    }\n  });\n}\n/** Export the primary function as the default behavior */\n\n\nvar _default = asArray;\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _item2 = require(\"./item\");\n\nvar _asArray = require(\"./asArray\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n/**\n * Random is quick class that expertly handles weighted randoms in your code\n * in an efficient way. It supports objects that sport\n */\nvar Random = /*#__PURE__*/function (_Symbol$toStringTag) {\n  /**\n   * Creates a new instance of Random which can be used to generate a random\n   * selection from the choices it is aware of. Each choice can be weighted\n   * differently than its peers.\n   *\n   * @param  {...any} list\n   */\n  function Random(weightIfFirstAndFinite) {\n    var _this$constructor;\n\n    for (var _len = arguments.length, list = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      list[_key - 1] = arguments[_key];\n    }\n\n    _classCallCheck(this, Random);\n\n    this.list = [];\n\n    if ((0, _asArray.isNumber)(weightIfFirstAndFinite)) {\n      this.standardWeight = Number(weightIfFirstAndFinite) || DEF_STD_WEIGHT;\n    } else {\n      this.standardWeight = DEF_STD_WEIGHT;\n\n      if (weightIfFirstAndFinite !== undefined && weightIfFirstAndFinite !== null) {\n        list = [weightIfFirstAndFinite].concat(list);\n      }\n    }\n\n    this.list = (_this$constructor = this.constructor).normalizeArgs.apply(_this$constructor, [this.standardWeight].concat(_toConsumableArray(list)));\n  }\n  /**\n   * When items are supplied without a specified weight, this is the\n   * weight applied to them when added to the internal list. This getter\n   * retrieves the current value for this instance.\n   *\n   * @return {Number} the current default weight, or 1.0 if unchanged\n   */\n\n\n  _createClass(Random, [{\n    key: \"standardWeight\",\n    get: function get() {\n      return this[STD_WEIGHT];\n    }\n    /**\n     * When items are supplied without a specified weight, this is the\n     * weight applied to them when added to the internal list. This setter\n     * applies a new value for this instance.\n     *\n     * @param {Number} value the current default weight, or 1.0 if unchanged\n     */\n    ,\n    set: function set(value) {\n      if ((0, _asArray.isNumber)(value)) {\n        this[STD_WEIGHT] = Number(value);\n        this.reweighStandardItems();\n      }\n    }\n    /**\n     * The size property determines the total weight of all the possibilities\n     * within the list. Each item has a weight and this value is the sum of all\n     * the items' individual weights combined.\n     *\n     * @return {Number} total weight of all choices\n     */\n\n  }, {\n    key: \"size\",\n    get: function get() {\n      var size = 0;\n\n      var _iterator = _createForOfIteratorHelper(this.list),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          size += item.weight;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return size;\n    }\n    /**\n     * Items supplied to the Random set without a weight will be set at a\n     * standard default weight. These items are also tagged as being set thus\n     * for easier identification. This method allows an easy way to reweigh\n     * those items with an alternate standard weight after the fact. If\n     * standardWeight has been set directly or via `newStandardWeight` the\n     * weights will be recalculated.\n     *\n     * @param {Number} newStandardWeight an optional new weight to apply to this\n     * Random instance for all new weights for items added\n     */\n\n  }, {\n    key: \"reweighStandardItems\",\n    value: function reweighStandardItems() {\n      var newStandardWeight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      if (newStandardWeight) {\n        this.standardWeight = newStandardWeight;\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(this.list),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var item = _step2.value;\n\n          if (item.tags && Array.isArray(item.tags) && item.tags.includes(STD_WEIGHT)) {\n            item.weight = this.standardWeight;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n    /**\n     * A way to append further items to the internal set of possibilities\n     * generated by this Random set. `this` will be returned for inlining.\n     *\n     * @param  {...any} items either a comma separated list of new items or\n     * any of the other accepted variations to append to the Random set.\n     * @return {Random} `this` is returned to allow for appending as an\n     * inline operation\n     */\n\n  }, {\n    key: \"add\",\n    value: function add() {\n      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var list = Random.normalizeArgs.apply(Random, [this.standardWeight].concat(items));\n      this.list = this.list.concat(list);\n      return this;\n    }\n    /**\n     * Adds a range of numbers as Random item choices to the set for\n     * picking. The number range can be from large to small or small\n     * to large; it makes no difference. Each item generated in this\n     * range of numbers will be tagged with a `GEN_RANGE` symbol for\n     * identification.\n     *\n     * @param {Number} from starting number of range\n     * @param {Number} to ending number of range\n     * @param {Number} withWeight an optional weight to use instead of the\n     * standardWeight from this `Random` instance\n     *\n     * @return {Random} the `this` value for inline chaining\n     *\n     * @throws an error if `from` or `to` are not actually numbers\n     */\n\n  }, {\n    key: \"addRange\",\n    value: function addRange() {\n      var from = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n      var withWeight = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (!(0, _asArray.isNumber)(from) || !(0, _asArray.isNumber)(to)) {\n        throw new Error('Number ranges must be numeric');\n      }\n\n      var asc = Number(from) < Number(to);\n      var Class = this.constructor;\n      var tags = [GEN_RANGE(from, to)];\n\n      if (withWeight === null) {\n        withWeight = this.standardWeight;\n        tags.push(STD_WEIGHT);\n      }\n\n      for (var i = from; asc && i <= to || !asc && i >= to; asc ? i++ : i--) {\n        this.list.push(Class.item(i, withWeight, tags));\n      }\n\n      return this;\n    }\n    /**\n     * Synonymous with one(); deprecated; remove before launch\n     */\n\n  }, {\n    key: \"generate\",\n    value: function generate() {\n      return this.one();\n    }\n    /**\n     * Randomly select a value from the internal list, taking into account\n     * any weights when generating the random occurrence.\n     *\n     * @param {function} postProcess if a function is supplied here, it is\n     * expected to be of the signature function(result):result. It allows you\n     * to process the result by acting on it and returning the subsequent \n     * value.\n     * @return {mixed} the value of the randomly, possibly randomly weighted,\n     * generated item. If the item's `value` property is a function, the\n     * result of that function is returned instead.\n     */\n\n  }, {\n    key: \"one\",\n    value: function one() {\n      var index = Math.random() * this.size;\n      var count = 0;\n\n      var toString = function toString(obj) {\n        return Object.prototype.toString.apply(obj);\n      };\n\n      var isFunction = function isFunction(obj) {\n        return /object Function/.test(toString(obj));\n      };\n\n      var _iterator3 = _createForOfIteratorHelper(this.list),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var item = _step3.value;\n\n          if (index < item.weight + count) {\n            var result = item.value;\n\n            if (item.next && item.next instanceof Random) {\n              result = item.next;\n            }\n\n            if (isFunction(result)) {\n              result = result();\n            }\n\n            while (result && result instanceof Random) {\n              result = result.one();\n            }\n\n            var postProcess = item.postProcess;\n\n            if (postProcess && isFunction(postProcess)) {\n              result = postProcess(result);\n            }\n\n            return result;\n          }\n\n          count += item.weight;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return null;\n    }\n    /**\n     * Same as `one()` but executes the function `count` number of times and\n     * returns the results in an array.\n     *\n     * @param {Number} count the number of items to generate. Defaults to 3\n     *\n     * @return {Array<mixed>} an array of items generated through subsequent\n     * calls to `.one()`\n     */\n\n  }, {\n    key: \"some\",\n    value: function some() {\n      var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n      var items = [];\n\n      for (var i = 0; i < count; i++) {\n        items.push(this.one());\n      }\n\n      return items;\n    }\n    /**\n     * Creates a new Random item entry with default values for `weight`, an\n     * empty array for `tags` and a `value` of whatever you wish to wrap. If\n     * `value` is a `function`, it will be executed whenever the value is\n     * used by `Random` instances.\n     *\n     * As a form of validation, if a Random.item instance is passed for value\n     * it will simply be returned as long as `force` is `false`\n     *\n     * @param {Mixed} value the value to be used for this `Random` item entry;\n     * if the value is a `Random` item entry it will only be wrapped if `force`\n     * is `true`.\n     * @param {Number} weight by default this is one, or the default standard\n     * weight used by the system.\n     */\n\n  }, {\n    key: _Symbol$toStringTag,\n    get:\n    /**\n     * Ensure that instances of Random report themselves as instances\n     * of class Random. Testing this is as easy as matching the name \n     * of this class to the results of a call to Object.prototype.\n     * toString.call() and passing this instance as the first parameter.\n     * \n     * @return {string} the name of the Class this function is part of\n     */\n    function get() {\n      return this.constructor.name;\n    }\n  }], [{\n    key: \"item\",\n    value: function item() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return _construct(_item2.Item, args);\n    }\n    /**\n     * Shortcut method that is identical to `new Random(...args).one()`\n     *\n     * @param  {...any} args the comma separated list of items to choose from;\n     * all items will be weighted evenly.\n     */\n\n  }, {\n    key: \"from\",\n    value: function from() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return _construct(Random, args).one();\n    }\n    /**\n     * Simulates the rolling of dice. A die, or dice if plural, have a given\n     * number of sides. The most common real world dice are six sided. The\n     * `count` value indicates the number of said dice that should be \"rolled\"\n     * and added together in order. A collection of rolls can be indicated\n     * if `repeat` is a number greater than one.\n     *\n     * Two completely optional twists are also available. First if `dropLowest`\n     * is true, the lowest number in a set is dropped before summing or\n     * returning. Second, if `individualValues` is true then rather than summing\n     * the results of the rolls per set, an array with each die roll will be\n     * returned instead; `dropLowest` still functions as expected if individual\n     * values are requested.\n     *\n     * @param {Number} count the number of times each die is rolled in a set\n     * @param {Number} sides the number of sides on the die, defaults to 6\n     * @param {Number} repeat how many sets to create, defaults to 1\n     * @param {Boolean} dropLowest true if the lowest value is dropped one time\n     * @param {Boolean} individualValues if true, defaults to false, then rather\n     * than summing the values, each element of the returned array will be an\n     * array of individual rolls.\n     * @return {Array<Number>|Array<Array<Number>>} an array of numbers will be\n     * returned, for a total count equal to repeat. If a six-sided die is\n     * \"rolled\" three times and this process is repeated six times, then an\n     * array of six numbers between 3 and 18 will be returned. If\n     * `individualValues` is true, rather than summed values, an array of array\n     * of numbers will be returned instead. `dropLowest` still works as expected\n     * in this case\n     */\n\n  }, {\n    key: \"roll\",\n    value: function roll() {\n      var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var sides = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n      var repeat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var dropLowest = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var individualValues = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var dice = Random.range(1, sides, 1000);\n      var results = [];\n\n      for (var i = 0; i < repeat; i++) {\n        var set = dice.some(count);\n        set.sort(_asArray.numericSort);\n\n        if (dropLowest) {\n          set.splice(0, 1);\n        }\n\n        results.push(individualValues ? set : set.reduce(function (prev, cur) {\n          return prev + cur;\n        }, 0));\n      }\n\n      return results;\n    }\n    /**\n     * A shortcut for creating a new `Random` instance, setting the weight\n     * and optionally adding in values at the newly set weight.\n     *\n     * @param {Number} defaultWeight a new value to use as a standard weight\n     * in a newly created Random() instance.\n     * @param  {...any} args any number of arguments to add to the Random\n     * instance with the newly calculated weight.\n     *\n     * @return a new instance of Random with the specified weight and\n     * optionally any values added at the new weight.\n     */\n\n  }, {\n    key: \"ofWeight\",\n    value: function ofWeight() {\n      var defaultWeight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEF_STD_WEIGHT;\n      var rand = new Random();\n      rand.standardWeight = defaultWeight;\n\n      for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n        args[_key5 - 1] = arguments[_key5];\n      }\n\n      rand.add.apply(rand, args);\n      return rand;\n    }\n    /**\n     * Given a number range, choose a number randomly from that list. The\n     * ranges are inclusive. So from of 1 and to of 6 will generate only\n     * values of the set [1,2,3,4,5,6]. Numbers below `from` and above\n     * `to` will not be selected.\n     *\n     * @param {Number} from the starting value of the range of numbers\n     * @param {Number} to the ending value of the range of numbers\n     * @param {Number} weighing the weight of each items by default\n     *\n     * @return {Random} the instance of `Random` prefilled with items whose\n     * values are numbers from the specified range.\n     */\n\n  }, {\n    key: \"range\",\n    value: function range() {\n      var from = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n      var weighing = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEF_STD_WEIGHT;\n      var rand = new Random().addRange(from, to, weighing);\n      return rand;\n    }\n    /**\n     * Choose any one item from the list of values supplied to the function.\n     * Each value supplied to the function will be appropriately wrapped using\n     * a call to `Random.item(value)` thereby giving it a value, weight and\n     * tags list.\n     *\n     * @param  {...any} args a comma separated list of values to choose from\n     *\n     * @return {mixed} the `value` property value or return result of a\n     * function if `value` is a function of the item randomly chosen from the\n     * list\n     */\n\n  }, {\n    key: \"one\",\n    value: function one() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      return _construct(Random, args).one();\n    }\n    /**\n     * Same as the static version of `Random.one()` but returning `count`\n     * number of instances in an array.\n     *\n     * @param {Number} count number of random selections to make\n     * @param  {...any} args the items from which to make a selection.\n     *\n     * @return {Array<mixed>} an array of items chosen from the selected\n     * list.\n     */\n\n  }, {\n    key: \"some\",\n    value: function some() {\n      var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n\n      for (var _len7 = arguments.length, args = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n        args[_key7 - 1] = arguments[_key7];\n      }\n\n      return _construct(Random, args).some(count);\n    }\n    /**\n     * Rather than choosing a value from the supplied list, for each value\n     * supplied a random property name from that object will instead be\n     * returned.\n     *\n     * @param {Number} count number of random selections to make\n     * @param  {...any} objects objects from which to randomly choose a\n     * property value name.\n     *\n     * @return {Array<string>} an array of property names chosen randomly\n     * from the list of objects supplied.\n     */\n\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n      for (var _len8 = arguments.length, objects = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n        objects[_key8 - 1] = arguments[_key8];\n      }\n\n      var bag = _construct(Random, objects);\n\n      return bag.some(count).map(function (item) {\n        return Random.one(Object.keys(item || {}));\n      });\n    }\n    /**\n     * Rather than choosing a value from the supplied list, for each value\n     * supplied a random property value from that object will instead be\n     * returned.\n     *\n     * @param {Number} count number of random selections to make\n     * @param  {...any} objects objects from which to randomly choose a\n     * property value.\n     *\n     * @return {Array<string>} an array of property values chosen randomly\n     * from the list of objects supplied.\n     */\n\n  }, {\n    key: \"values\",\n    value: function values() {\n      var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n      for (var _len9 = arguments.length, objects = new Array(_len9 > 1 ? _len9 - 1 : 0), _key9 = 1; _key9 < _len9; _key9++) {\n        objects[_key9 - 1] = arguments[_key9];\n      }\n\n      var bag = _construct(Random, objects);\n\n      return bag.some(count).map(function (item) {\n        var key = Random.one(Object.keys(item || {}));\n        var val = item[key];\n        return val;\n      });\n    }\n    /**\n     * Rather than choosing a value from the supplied list, for each value\n     * supplied a random property name and value from that object will instead\n     * be returned.\n     *\n     * @param {Number} count number of random selections to make\n     * @param  {...any} objects objects from which to randomly choose a\n     * property name and value.\n     *\n     * @return {Array<string>} an array of property names and values chosen\n     * randomly from the list of objects supplied.\n     */\n\n  }, {\n    key: \"entries\",\n    value: function entries() {\n      var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n      for (var _len10 = arguments.length, objects = new Array(_len10 > 1 ? _len10 - 1 : 0), _key10 = 1; _key10 < _len10; _key10++) {\n        objects[_key10 - 1] = arguments[_key10];\n      }\n\n      var bag = _construct(Random, objects);\n\n      return bag.some(count).map(function (item) {\n        var key = Random.one(Object.keys(item || {}));\n        var val = item[key];\n        return [key, val];\n      });\n    }\n    /**\n     * Some effort has gone into parsing the supplied values to be smart about\n     * how to process them. If *only one item* is supplied, some custom logic is\n     * considered.\n     *\n     * If the item is an array, then its values are used instead\n     * If the item has a `length` property then\n     *   If the item has a `asArray` getter then use its resulting contents\n     *   If the item is not a string, use the contents of calling Array.from()\n     *\n     * Once all logic has been considered, wrap each item up as a Random.item()\n     * result; excepting only if the supplied item has both a value and weight\n     * property. If the object has a 'value' and 'weight' property but no 'tags'\n     * property, rather than modifying the original, a proxy of the item with\n     * a handler that returns an empty array for tags is added.\n     *\n     * @param {Number} defaultWeight the default weight to apply to arguments\n     * processed using this method.\n     * @param  {...any} args any value that should be considered to be added\n     * to the `Random` set for selection.\n     *\n     * @return {Array<mixed>} returns an array of properly vetted items for\n     * a Random instance to contain\n     */\n\n  }, {\n    key: \"normalizeArgs\",\n    value: function normalizeArgs(defaultWeight) {\n      for (var _len11 = arguments.length, args = new Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {\n        args[_key11 - 1] = arguments[_key11];\n      }\n\n      var Class = this;\n      var list = []; // If we are given a single value, it may be more complicated...\n\n      if (args.length === 1) {\n        // If the first and only argument is an array, then the list\n        // should be its contents\n        if (Array.isArray(args[0])) {\n          args = _toConsumableArray(args[0]);\n        } // If the object appears to known its own length...\n        else if (args[0].hasOwnProperty('length')) {\n          // ...if that object has an .asArray property...\n          if (args[0].hasOwnProperty('asArray')) {\n            args = args[0].asArray;\n          } else if (typeof args !== 'string') {\n            args = Array.from(args[0]);\n          }\n        }\n      }\n\n      var _iterator4 = _createForOfIteratorHelper(args),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var item = _step4.value;\n\n          if (Array.isArray(item)) {\n            var _item = _slicedToArray(item, 2),\n                value = _item[0],\n                weight = _item[1];\n\n            list.push(Class.item(value, weight));\n          } else if (item.hasOwnProperty('weight') && item.hasOwnProperty('value')) {\n            if (!item.hasOwnProperty('tags')) {\n              list.push(new Proxy(item, {\n                get: function get(target, property, receiver) {\n                  if (property === 'tags') {\n                    return [];\n                  } else {\n                    return Reflect.get(target, property, receiver);\n                  }\n                }\n              }));\n            } else {\n              list.push(item);\n            }\n          } else {\n            list.push(Class.item(item, defaultWeight || DEF_STD_WEIGHT, [STD_WEIGHT]));\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return list;\n    }\n  }, {\n    key: \"usingItem\",\n    value: function usingItem(itemClass) {\n      if (~(itemClass === null || itemClass === void 0 ? void 0 : itemClass.prototype) instanceof _item2.Item) {\n        return Random;\n      }\n\n      return eval(\"(\\n      class Random_\".concat(itemClass.name, \" extends Random {\\n        static item(...args) { return new itemClass(...args) }\\n      }\\n    )\"));\n    }\n  }]);\n\n  return Random;\n}(Symbol.toStringTag);\n/** Standard default weight value used through code for new items */\n\n\nvar DEF_STD_WEIGHT = new Number(1);\n/** A constant symbol used as a tag for standard weight items */\n\nvar STD_WEIGHT = Symbol('Standard Default Random Item Weight');\n/** A generated symbol applied to addRange(...) items */\n\nvar GEN_RANGE = function GEN_RANGE(from, to) {\n  return Symbol[\"for\"](\"Generated Range Item from \".concat(from, \" to \").concat(to));\n};\n/**\n * Deconstructs a `Symbol` generated using `GEN_RANGE` and returns an\n * array with the `from` and `to` values used to generate the supplied\n * symbol\n *\n * @param {Symbol} symbol a symbol generated using `GEN_RANGE`\n *\n * @return {Array<Number>} an array of two values used in the original\n * call to GEN_RANGE.\n */\n\n\nvar GEN_RANGE_VALS = function GEN_RANGE_VALS(symbol) {\n  return Array.from(/.*(\\b\\d+\\b).*(\\b\\d+\\b)/.exec(symbol.toString())).slice(1);\n};\n\nmodule.exports = {\n  \"default\": Random,\n  Random: Random,\n  isNumber: _asArray.isNumber,\n  numericSort: _asArray.numericSort,\n  provideGetter: _asArray.provideGetter,\n  STD_WEIGHT: STD_WEIGHT,\n  DEF_STD_WEIGHT: DEF_STD_WEIGHT,\n  GEN_RANGE: GEN_RANGE,\n  GEN_RANGE_VALS: GEN_RANGE_VALS\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Item = void 0;\n\nvar _random = require(\"./random\");\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Item = /*#__PURE__*/function () {\n  function Item() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var weight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _random.DEF_STD_WEIGHT;\n    var tags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var force = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var next = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    var postProcess = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n\n    _classCallCheck(this, Item);\n\n    _defineProperty(this, \"next\", null);\n\n    _defineProperty(this, \"postProcess\", null);\n\n    _defineProperty(this, \"value\", null);\n\n    _defineProperty(this, \"weight\", _random.DEF_STD_WEIGHT);\n\n    _defineProperty(this, \"tags\", [_random.STD_WEIGHT]);\n\n    if (_typeof(value) === 'object' && typeof value.value !== 'undefined' && typeof value.weight !== 'undefined' && !force) {\n      Object.assign(this, value);\n    }\n\n    if (weight === _random.DEF_STD_WEIGHT && !~tags.indexOf(_random.STD_WEIGHT)) {\n      tags.push(_random.STD_WEIGHT);\n    }\n\n    Object.assign(this, {\n      value: value,\n      weight: weight,\n      tags: tags,\n      next: next,\n      postProcess: postProcess\n    });\n  }\n  /**\n   * A shortcut method that allows the creation of an instance using the\n   * `.from()` static method. Identical to using `new Item(...)` syntax.\n   *\n   * Examples:\n   *   Item.from('hello')\n   *   Item.from('hello', 50)\n   *\n   * @method from\n   * @param {[type]} args [description]\n   * @return {[type]} [description]\n   */\n\n\n  _createClass(Item, null, [{\n    key: \"from\",\n    value: function from() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _construct(Item, args);\n    }\n    /**\n     * This value, if an instance of `Random` will cause `next.one()` to be\n     * called if this item is selected. This is a method that allows one\n     * choice to trigger another choice.\n     * \n     * @type {Random}\n     */\n\n  }]);\n\n  return Item;\n}();\n\nexports.Item = Item;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WeaponsArmorTable = exports.WandsStavesRodsTable = exports.SwordsTable = exports.ScrollsTable = exports.RingsTable = exports.PotionsTable = exports.MiscellaneousMagicTable = exports.MagicItemsTable = void 0;\n\nvar _random = require(\"../random\");\n\nvar SwordsTable = new _random.Random('Sword +1', 'Sword +1, +2 against Lycanthropes', 'Sword +1, +2 against Spell Users', 'Sword +1, +3 against Undead', 'Sword +1, +3 against Dragons', 'Sword +2', 'Sword -1, cursed');\nexports.SwordsTable = SwordsTable;\nvar WeaponsArmorTable = new _random.Random('Arrows +1 (10 arrows)', 'Axe +1', 'Dagger +1', 'Mace +1', 'Armor +1', 'Shield +1', 'Armor & Shield (each +1)', 'Armor, cursed as AC 9 (looks like Armor +1)');\nexports.WeaponsArmorTable = WeaponsArmorTable;\nvar PotionsTable = new _random.Random('Diminution', 'ESP', 'Gaseous Form', 'Growth', 'Healing', 'Invisibility', 'Levitation', 'Poison');\n/**\n * The ScrollsTable does some interesting things with the first\n * three items. In these cases, there is a 25% chance that the\n * spells are for Cleric magic instead of magic-user/elf magic.\n * So if one of these items are chosen, we set its value to a\n * function that makes that determination. In theory we could \n * also specify a next table but that wouldn't be as clean.\n */\n\nexports.PotionsTable = PotionsTable;\nvar ScrollsTable = new _random.Random(function () {\n  return _random.Random.from({\n    value: 'Spell scroll: 1 magic-user/elf spell (any)',\n    weight: 75\n  }, {\n    value: 'Spell scroll: 1 cleric spell (any)',\n    weight: 25\n  });\n}, function () {\n  return _random.Random.from({\n    value: 'Spell scroll: 2 magic-user/elf spells (any)',\n    weight: 75\n  }, {\n    value: 'Spell scroll: 2 cleric spells (any)',\n    weight: 25\n  });\n}, function () {\n  return _random.Random.from({\n    value: 'Spell scroll: 3 magic-user/elf spells (any)',\n    weight: 75\n  }, {\n    value: 'Spell scroll: 3 cleric spells (any)',\n    weight: 25\n  });\n}, 'Cursed scroll (affects reader immediately)', 'Protection from Lycanthropes', 'Protection from Undead', 'Treasure Map: location of 1,000 - 4,000 gp value', 'Treasure Map: location of 1 hidden magic item');\nexports.ScrollsTable = ScrollsTable;\nvar RingsTable = new _random.Random('Animal Control', 'Fire Resistance', 'Invisibility', 'Protection +1', 'Water Walking', 'Weakness');\nexports.RingsTable = RingsTable;\nvar WandsStavesRodsTable = new _random.Random('Wand of Enemy Detection', 'Wand of Magic Detection', 'Wand of Paralyzation', 'Staff of Healing', 'Snake Staff', 'Rod of Cancellation');\nexports.WandsStavesRodsTable = WandsStavesRodsTable;\nvar MiscellaneousMagicTable = new _random.Random('Bag of Devouring', 'Bag of Holding', 'Broom of Flying', 'Crystal Ball', 'Elven Cloak & Boots', 'Gauntlets of Ogre Power', 'Helm of Alignment Changing', 'Helm of Telepathy', 'Medallion of ESP', 'Rope of Climbing');\n/**\n * In this example, we see the top level items in the General\n * Magic Items Table. The `next` property of each item indicates\n * another Random object instance with a more specific item. If\n * a selected item has a `next` property and that property value\n * is another instance of Random, the chain will keep calling \n * until this statement isn't true. \n * \n * So if we get a random number of 16, that would indicate Sword\n * which would then invoke a random item from the SwordsTable \n * instance.\n * \n * In cases where there is a postProcess function, we take the\n * final resulting item and modify it in some way before passing\n * it along. In this case, the potions and rings tables contain\n * values that might be ambiguous if we didn't say they were first\n * a ring or a potion.\n */\n\nexports.MiscellaneousMagicTable = MiscellaneousMagicTable;\nvar MagicItemsTable = new _random.Random({\n  value: 'Sword',\n  weight: 20,\n  next: SwordsTable\n}, {\n  value: 'Weapon/Armor',\n  weight: 20,\n  next: WeaponsArmorTable\n}, {\n  value: 'Potion',\n  weight: 25,\n  next: PotionsTable,\n  postProcess: function postProcess(item) {\n    return \"Potion of \".concat(item);\n  }\n}, {\n  value: 'Scroll',\n  weight: 20,\n  next: ScrollsTable\n}, {\n  value: 'Ring',\n  weight: 5,\n  next: RingsTable,\n  postProcess: function postProcess(item) {\n    return \"Ring of \".concat(item);\n  }\n}, {\n  value: 'Wand/Staff/Rod',\n  weight: 5,\n  next: WandsStavesRodsTable\n}, {\n  value: 'Miscellaneous Magic',\n  weight: 5,\n  next: MiscellaneousMagicTable\n});\nexports.MagicItemsTable = MagicItemsTable;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  Item: true,\n  Random: true,\n  STD_WEIGHT: true,\n  DEF_STD_WEIGHT: true,\n  GEN_RANGE: true,\n  GEN_RANGE_VALS: true\n};\nObject.defineProperty(exports, \"DEF_STD_WEIGHT\", {\n  enumerable: true,\n  get: function get() {\n    return _random.DEF_STD_WEIGHT;\n  }\n});\nObject.defineProperty(exports, \"GEN_RANGE\", {\n  enumerable: true,\n  get: function get() {\n    return _random.GEN_RANGE;\n  }\n});\nObject.defineProperty(exports, \"GEN_RANGE_VALS\", {\n  enumerable: true,\n  get: function get() {\n    return _random.GEN_RANGE_VALS;\n  }\n});\nObject.defineProperty(exports, \"Item\", {\n  enumerable: true,\n  get: function get() {\n    return _item.Item;\n  }\n});\nObject.defineProperty(exports, \"Random\", {\n  enumerable: true,\n  get: function get() {\n    return _random.Random;\n  }\n});\nObject.defineProperty(exports, \"STD_WEIGHT\", {\n  enumerable: true,\n  get: function get() {\n    return _random.STD_WEIGHT;\n  }\n});\n\nvar _item = require(\"./item\");\n\nvar _asArray = require(\"./asArray\");\n\nObject.keys(_asArray).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _asArray[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _asArray[key];\n    }\n  });\n});\n\nvar _DnDBasicRulesMagic = require(\"./examples/DnDBasicRulesMagic\");\n\nObject.keys(_DnDBasicRulesMagic).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _DnDBasicRulesMagic[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _DnDBasicRulesMagic[key];\n    }\n  });\n});\n\nvar _random = require(\"./random\");"]}